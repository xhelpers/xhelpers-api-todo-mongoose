name: CI | CD - Branch homolog

on:
  push:
    branches:
      - homolog
  workflow_dispatch:

env:
  ENV: hom
  # from git org:
  K8S_NAMESPACE: ${{ secrets.K8S_NAMESPACE }}
  REGISTRY_URL: ${{ secrets.REGISTRY_URL }}
  REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
  REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}  
  KUBE_CONFIG: ${{ secrets.KUBE_CONFIG_HOMOLOG }}

  # from git repo:  
  SERVICE_URL: ${{ secrets.SERVICE_URL }}  # dns: my-api-dev.mydomain.com, if $ENV != prd: $ENV-my-api-dev.mydomain.com

  # auto  
  REPOSITORY_NAME: ""  # github project slug - "${GITHUB_REPOSITORY,,}" | tr '[:upper:]' '[:lower:]'
  IMAGE_REPO_URL: ""  # $REGISTRY_URL/$REPOSITORY_NAME:$ENV-$github.sha
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Docker Login
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.REGISTRY_URL }}
          username: ${{ env.REGISTRY_USERNAME }}
          password: ${{ env.REGISTRY_PASSWORD }}

      - name: docker build and push to registry
        run: |          
          echo "REPOSITORY_NAME=$(echo "${GITHUB_REPOSITORY,,}" | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV      
          echo "IMAGE_REPO_URL=${{ env.REGISTRY_URL }}/$REPOSITORY_NAME:${{ env.ENV }}-${{ github.sha }}" >> $GITHUB_ENV  
          docker build . -t $IMAGE_REPO_URL -f ./Dockerfile
          docker push $IMAGE_REPO_URL

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - uses: actions/checkout@v2
    - name: set build environment values
      run : |
        if [ ${ENV} == "prd" ]
        then
          export SERVICE_URL="${SERVICE_URL}"
        else
          export SERVICE_URL="${ENV}${SERVICE_URL}"
        fi        
        echo "SERVICE_URL=${SERVICE_URL}" >> $GITHUB_ENV
        echo "SERVICE_NAME=$REPOSITORY_NAME" >> $GITHUB_ENV

    - name: kubernetes set-context
      uses: Azure/k8s-set-context@v1
      with:
        kubeconfig: ${{ env.KUBE_CONFIG }}

    - name: create namespace and secret
      run: |
        cat << EOF | kubectl apply -f -
        apiVersion: v1
        kind: Namespace
        metadata:
          name: $K8S_NAMESPACE
        EOF

    - uses: azure/k8s-create-secret@v1
      with:
        container-registry-url: ${{ env.REGISTRY_URL }}
        container-registry-username: ${{ env.REGISTRY_USERNAME }}
        container-registry-password: ${{ env.REGISTRY_PASSWORD }}
        secret-name: ${{ env.REPOSITORY_NAME }}
        namespace: ${{ env.K8S_NAMESPACE }}

    - uses: danielr1996/envsubst-action@1.0.0
      with:
        input: ./manifests/deployment.yaml
        output: ./manifests/output.yaml

    - name: apply k8s manifests
      run: |
        kubectl apply -f ./manifests/output.yaml
